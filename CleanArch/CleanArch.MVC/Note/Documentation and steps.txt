step for Migration
1.Creating black solution.
2. creat 5 different folder
			a. cleanArch.Application
			b. cleanArch.Domain
			c. cleanArch.Infra.Data
			d. cleanArch.Infra.loC
			e. cleanArch.UI.MVC
3. Add a new project at the cleanArch.Ul.MVC and name it cleanArch.MVC
			- Changing the appSettings.json to point to the database
			- Run the two command to add the model identity in to the database.
					1. add-migration "InitialMigration" -context ApplicationDbContext
					2.  update-database
4.Rename the folder 		
			a. cleanArch.Application => Application
			b. cleanArch.Domain=> Domain
			c. cleanArch.Infra.Data=> Infra.Data
			d. cleanArch.Infra.loC=> Infra.loC
			e. cleanArch.UI.MVC=> Presentation
5. Add a Class Library in to Domain called CleanArch.Domain. And remove the Class1.cs
			when you build and run in to an error(netsdk1004).
			run the following in the package manager console.
						dotnet restore
6 Create a folder under a Class Library CleanArch.Domain and name it "Models"
	* add a new clas inside the Models and name it Course.cs
	* and add the following attribute
	 public class Course
	 {
	    public int Id{get;set;}
		public string Name{get;set;}
		public string Description{get;set;}
		public string ImageUrl{get;set;}
	 }
	 * build after you finish.
	 * commit and name it "Add course domain model"
7. In Infra.Data add Class Library and name it "CleanArch.Infra.Data"
		* delete the class1
		* add a new folder "Context"
		* add a new class and name it "UniversityDBContext"
		* right dependecies in the "CleanArch.Infra.Data" -> click Manage NUGet package
		* search for "Microsoft.entityFrameworkCore" ->install
		* search for "Microsoft.entityFrameworkCore.design" ->install
		* search for "Microsoft.entityFrameworkCore.sqlserver" ->install
		* search for "Microsoft.entityFrameworkCore.tools" ->install
		* write the following code in "UniversityDBContext" class
		public class UniveristyDBContext: DbContext
		{
		// creating constructor
		   public UniveristyDBContext(DbContextOption options): base(options)
		   {		       
		   }

		   public DbSet<Course> Courses{get;set;}
		}
		* build 
		*
8. add another Dbcontext in startup.cs
       services.AddDbContext<UniveristyDBContext>(options =>
            {
                options.UseSqlServer(Configuration.GetConnectionString("UniverityDBConnection"));
            });

     * in appsetting.json add the following code
		Add "," at the end of the DefaultConnection end line
		"UniverityDBConnection": "Server=DESKTOP-7STN46S;Database=UniverisityDB;Trusted_Connection=True;MultipleActiveResultSets=true"
		
	 * Make sure your default Project is in Arch.Infra.Data
			* Add-migration "InitialMigration" -Context UniveristyDBContext                         
	        * Update-database -Context UniveristyDBContext

9. Commit =>  "initial Commit of Infrastructure.Data.project and update MVC fron the UniveristyDBContext"

10.